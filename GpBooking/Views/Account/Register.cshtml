@model GpBooking.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}

@section title
{
 @ViewBag.Title
}

@using (Html.BeginForm("Register", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "login100-form validate-form flex-sb flex-w", role = "form" }))
{
    <span class="login100-form-title p-b-32">
        Create a new account.
    </span>
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <span class="txt1 p-b-11">
        Email
    </span>
    <div class="wrap-input100 validate-input m-b-36" data-validate="Email is required">
        @Html.TextBoxFor(m => m.Email, new { @class = "input100" })
        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        <span class="focus-input100"></span>
    </div>
    <span class="txt1 p-b-11">
        Phone
    </span>
    <div class="wrap-input100 m-b-36">
        @Html.TextBoxFor(m => m.Phone, new { @class = "input100" })
        <span class="focus-input100"></span>
    </div>
    <span class="txt1 p-b-11">
        Name
    </span>
    <div class="wrap-input100 validate-input m-b-36" data-validate="Name is required">
        @Html.TextBoxFor(m => m.Name, new { @class = "input100" })
        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
        <span class="focus-input100"></span>
    </div>
    <span class="txt1 p-b-11">
        Username
    </span>
    <div class="wrap-input100 validate-input m-b-36" data-validate="Username is required">
        @Html.TextBoxFor(m => m.UserName, new { @class = "input100" })
        @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
        <span class="focus-input100"></span>
    </div>

    <span class="txt1 p-b-11">
        Password
    </span>
    <div class="wrap-input100 validate-input m-b-12" data-validate="Password is required">
        <span class="btn-show-pass">
            <i class="fa fa-eye"></i>
        </span>
        @Html.PasswordFor(m => m.Password, new { @class = "input100" })
        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        <span class="focus-input100"></span>
    </div>
    <span class="txt1 p-b-11">
        Confirm Password
    </span>
    <div class="wrap-input100 validate-input m-b-12" data-validate="Confirm Password is required">
        <span class="btn-show-pass">
            <i class="fa fa-eye"></i>
        </span>
        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "input100" })
        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
        <span class="focus-input100"></span>
    </div>



    <div class="container-login100-form-btn">
        <input type="submit" value="Register" class="login100-form-btn" />
    </div>
}