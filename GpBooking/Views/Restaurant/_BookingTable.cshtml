@model GpBooking.Models.RestaurantReservations

@using (Html.BeginForm("Booking", "Restaurant", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "login100-form validate-form flex-sb flex-w", role = "form" }))
{
    <span class="login100-form-title p-b-32">
     Booking
    </span>
    @Html.AntiForgeryToken()
    @Html.HiddenFor(l=>l.Id)
    @Html.HiddenFor(l=>l.ApplicationUserId)
    @Html.HiddenFor(l=>l.RestaurantId)
    @Html.HiddenFor(l=>l.ReservationDate)
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <span class="txt1 p-b-11">
        Date
    </span>
    <div class="wrap-input100 validate-input m-b-36" data-validate="StartDate is required">
        @Html.TextBoxFor(m => m.Date, new { @class = "input100 datepicker" })
        @Html.ValidationMessageFor(m => m.Date, "", new { @class = "text-danger" })
        <span class="focus-input100"></span>
    </div>
    <span class="txt1 p-b-11">
        NumberOfTable
    </span>
    <div class="wrap-input100 validate-input m-b-36" data-validate="Name is required">
        @Html.TextBoxFor(m => m.NumberOfTable, new { @class = "input100" })
        @Html.ValidationMessageFor(m => m.NumberOfTable, "", new { @class = "text-danger" })
        <span class="focus-input100"></span>
    </div>
    <span class="txt1 p-b-11">
        PaymentType
    </span>
    <div class="wrap-input100 validate-input m-b-36" data-validate="Username is required">
        @Html.EnumDropDownListFor(m => m.PaymentType, new { @class = "input100" })
        @Html.ValidationMessageFor(m => m.PaymentType, "", new { @class = "text-danger" })
        <span class="focus-input100"></span>
    </div>
    <div class="container-login100-form-btn">
        <input type="submit" value="Booking" class="login100-form-btn" />
    </div>
}